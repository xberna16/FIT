// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamCommunication.DAL;

namespace TeamCommunication.DAL.Migrations
{
    [DbContext(typeof(TeamCommunicationDbContext))]
    [Migration("20190406205604_Update")]
    partial class Update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeamCommunication.DAL.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("TopicId");

                    b.Property<Guid?>("UserId");

                    b.Property<DateTime>("date");

                    b.Property<string>("text");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("TeamCommunication.DAL.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("TeamCommunication.DAL.Entities.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("TeamId");

                    b.Property<Guid?>("UserId");

                    b.Property<DateTime>("date");

                    b.Property<string>("heading");

                    b.Property<string>("text");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("TeamCommunication.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("nickname");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeamCommunication.DAL.Entities.UserTeam", b =>
                {
                    b.Property<Guid>("idTeam");

                    b.Property<Guid>("idUser");

                    b.Property<Guid>("Id");

                    b.HasKey("idTeam", "idUser");

                    b.HasIndex("idUser");

                    b.ToTable("UserTeams");
                });

            modelBuilder.Entity("TeamCommunication.DAL.Entities.Comment", b =>
                {
                    b.HasOne("TeamCommunication.DAL.Entities.Topic", "Topic")
                        .WithMany("Comments")
                        .HasForeignKey("TopicId");

                    b.HasOne("TeamCommunication.DAL.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TeamCommunication.DAL.Entities.Topic", b =>
                {
                    b.HasOne("TeamCommunication.DAL.Entities.Team", "Team")
                        .WithMany("Topics")
                        .HasForeignKey("TeamId");

                    b.HasOne("TeamCommunication.DAL.Entities.User", "User")
                        .WithMany("Topics")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TeamCommunication.DAL.Entities.UserTeam", b =>
                {
                    b.HasOne("TeamCommunication.DAL.Entities.Team", "Team")
                        .WithMany("UserTeams")
                        .HasForeignKey("idTeam")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TeamCommunication.DAL.Entities.User", "User")
                        .WithMany("UserTeams")
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
